{"ast":null,"code":"var _jsxFileName = \"/Users/Mihail/Documents/VS/projects/chat-app/client/src/components/Message/Message.js\";\nimport React from \"react\";\nimport ReactEmoji from \"react-emoji\";\nimport classes from \"./Message.module.css\";\n\nconst Message = props => {\n  const name = props.name.trim().toLowerCase();\n  let current = props.message.user === name;\n  let opacity = 0;\n  let currentTime = new Date().toLocaleTimeString('en-GB', {\n    hour: \"numeric\",\n    minute: \"numeric\"\n  });\n\n  const nameOpacityHandler = () => opacity = !opacity ? 1 : 0; //two different types of messages can be shown if its current user's message or not\n\n\n  const message = current ? React.createElement(\"div\", {\n    className: [classes.Container, classes.End].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: [classes.SentBy, classes.pr].join(\" \"),\n    style: {\n      opacity: opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    className: [classes.Box, classes.Green].join(\" \"),\n    onMouseOver: nameOpacityHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: [classes.Text, classes.White].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, ReactEmoji.emojify(props.message.text)), React.createElement(\"p\", {\n    className: classes.Time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, currentTime))) : React.createElement(\"div\", {\n    className: [classes.Container, classes.Start].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: [classes.Box, classes.Light].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: [classes.Text, classes.Dark].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, ReactEmoji.emojify(props.message.text)), React.createElement(\"p\", {\n    className: [classes.SentBy, classes.pl].join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.message.user, \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, currentTime))));\n  return message;\n};\n\nexport default Message;","map":{"version":3,"sources":["/Users/Mihail/Documents/VS/projects/chat-app/client/src/components/Message/Message.js"],"names":["React","ReactEmoji","classes","Message","props","name","trim","toLowerCase","current","message","user","opacity","currentTime","Date","toLocaleTimeString","hour","minute","nameOpacityHandler","Container","End","join","SentBy","pr","Box","Green","Text","White","emojify","text","Time","Start","Light","Dark","pl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactEmoji from \"react-emoji\";\nimport classes from \"./Message.module.css\";\n\nconst Message = props => {\n  const name = props.name.trim().toLowerCase();\n  let current = props.message.user === name;\n  let opacity = 0;\n  let currentTime = new Date().toLocaleTimeString('en-GB', { hour: \"numeric\", minute: \"numeric\"});\n\n  const nameOpacityHandler = () => (opacity = !opacity ? 1 : 0);\n\n  //two different types of messages can be shown if its current user's message or not\n  const message = current ? (\n    <div className={[classes.Container, classes.End].join(\" \")}>\n      <p\n        className={[classes.SentBy, classes.pr].join(\" \")}\n        style={{ opacity: opacity }}\n      >\n        {name}\n      </p>\n      <div\n        className={[classes.Box, classes.Green].join(\" \")}\n        onMouseOver={nameOpacityHandler}\n      >\n        <p className={[classes.Text, classes.White].join(\" \")}>\n          {ReactEmoji.emojify(props.message.text)}\n        </p>\n        <p className={classes.Time}>{currentTime}</p>\n      </div>\n    </div>\n  ) : (\n    <div className={[classes.Container, classes.Start].join(\" \")}>\n      <div className={[classes.Box, classes.Light].join(\" \")}>\n        <p className={[classes.Text, classes.Dark].join(\" \")}>\n          {ReactEmoji.emojify(props.message.text)}\n        </p>\n        <p className={[classes.SentBy, classes.pl].join(\" \")}>\n          {props.message.user}{\" \"}\n          <span>{currentTime}</span>\n        </p>\n      </div>\n    </div>\n  );\n\n  return message;\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}