{"ast":null,"code":"import _slicedToArray from \"/Users/Mihail/Documents/VS/projects/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Mihail/Documents/VS/projects/chat-app/client/src/components/RecentRooms/RecentRooms.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./RecentRooms.module.css\";\n\nconst RecentRooms = props => {\n  const _useState = useState({\n    display: \"none\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userToggledStyle = _useState2[0],\n        setUserToggledStyle = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hovered = _useState4[0],\n        setHovered = _useState4[1];\n\n  const mouseEnterHandler = () => {\n    setUserToggledStyle({\n      display: \"block\"\n    });\n    setHovered(false);\n  };\n\n  const mouseLeaveHandler = () => {\n    setUserToggledStyle({\n      display: \"none\"\n    });\n    setHovered(true);\n  };\n\n  const rooms = props.roomsData.map((room, index) => {\n    const users = room.users.map(user => React.createElement(\"h5\", {\n      className: classes.User,\n      key: user.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\u26A1\"), user.name));\n    const link = `/?room=${room.room}`;\n    return React.createElement(\"div\", {\n      className: classes.Room,\n      key: room.room,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: classes.RoomHeader,\n      style: room.users.length === 0 || hovered ? {\n        borderBottom: \"0\"\n      } : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\uD83C\\uDFE0\"), \" \", React.createElement(Link, {\n      to: link,\n      onClick: props.setRoomHandler(room.room),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, room.room)), React.createElement(\"div\", {\n      style: userToggledStyle,\n      className: classes.UserContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, users));\n  }); // showing rooms only if there are some fetched from a server\n\n  const roomsShow = props.roomsData.length !== 0 ? React.createElement(\"div\", {\n    className: classes.RoomsInner,\n    onMouseOver: mouseEnterHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, rooms) : React.createElement(\"h1\", {\n    className: classes.None,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"-\");\n  return React.createElement(\"div\", {\n    className: classes.RoomsOuter,\n    onMouseLeave: mouseLeaveHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: classes.Header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Recent rooms:\"), roomsShow);\n};\n\nexport default RecentRooms;","map":{"version":3,"sources":["/Users/Mihail/Documents/VS/projects/chat-app/client/src/components/RecentRooms/RecentRooms.js"],"names":["React","useState","Link","classes","RecentRooms","props","display","userToggledStyle","setUserToggledStyle","hovered","setHovered","mouseEnterHandler","mouseLeaveHandler","rooms","roomsData","map","room","index","users","user","User","name","link","Room","RoomHeader","length","borderBottom","setRoomHandler","UserContainer","roomsShow","RoomsInner","None","RoomsOuter","Header"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./RecentRooms.module.css\";\n\nconst RecentRooms = props => {\n  const [userToggledStyle, setUserToggledStyle] = useState({ display: \"none\" });\n  const [hovered, setHovered] = useState(true);\n\n  const mouseEnterHandler = () => {\n    setUserToggledStyle({ display: \"block\" });\n    setHovered(false);\n  };\n  const mouseLeaveHandler = () => {\n    setUserToggledStyle({ display: \"none\" });\n    setHovered(true);\n  };\n\n  const rooms = props.roomsData.map((room, index) => {\n    const users = room.users.map(user => (\n      <h5 className={classes.User} key={user.name}>\n        <span role=\"img\" aria-label=\"online\">\n          ‚ö°\n        </span>\n        {user.name}\n      </h5>\n    ));\n\n    const link = `/?room=${room.room}`;\n\n    return (\n      <div className={classes.Room} key={room.room}>\n        <h2\n          className={classes.RoomHeader}\n          style={\n            room.users.length === 0 || hovered ? { borderBottom: \"0\" } : null\n          }\n        >\n          <span role=\"img\" aria-label=\"online\">\n            üè†\n          </span>{\" \"}\n          <Link to={link} onClick={props.setRoomHandler(room.room)}>\n            {room.room}\n          </Link>\n        </h2>\n        <div style={userToggledStyle} className={classes.UserContainer}>\n          {users}\n        </div>\n      </div>\n    );\n  });\n\n  // showing rooms only if there are some fetched from a server\n  const roomsShow =\n    props.roomsData.length !== 0 ? (\n      <div className={classes.RoomsInner} onMouseOver={mouseEnterHandler}>\n        {rooms}\n      </div>\n    ) : (\n      <h1 className={classes.None}>-</h1>\n    );\n\n  return (\n    <div className={classes.RoomsOuter} onMouseLeave={mouseLeaveHandler}>\n      <h1 className={classes.Header}>Recent rooms:</h1>\n      {roomsShow}\n    </div>\n  );\n};\n\nexport default RecentRooms;\n"]},"metadata":{},"sourceType":"module"}