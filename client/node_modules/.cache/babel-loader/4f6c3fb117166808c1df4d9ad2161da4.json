{"ast":null,"code":"import _slicedToArray from \"/Users/Mihail/Documents/VS/projects/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Mihail/Documents/VS/projects/chat-app/client/src/containers/Chat/Chat.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Info from \"../../components/Info/Info\";\nimport Input from \"../../components/Input/Input\";\nimport Messages from \"../../components/Messages/Messages\";\nimport Users from \"../../components/Users/Users\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport classes from \"./Chat.module.css\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        messages = _useState8[0],\n        setMessages = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        users = _useState10[0],\n        setUsers = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        modalShow = _useState12[0],\n        setModalShow = _useState12[1];\n\n  const ENDPOINT = \"https://socketsio-chat.herokuapp.com/\";\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    if (!(name || room)) {\n      alert(\"Error: empty query params!\");\n      document.location.assign(\"/\");\n    }\n\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => setUsers(users));\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n  };\n\n  const setMessageHandler = event => setMessage(event.target.value);\n\n  const modalToggleHandler = () => setModalShow(modalShow ? false : true);\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.OuterWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.InnerWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Info, {\n    room: room,\n    users: modalToggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    send: sendMessage,\n    set: setMessageHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(Users, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    users: users,\n    show: modalShow,\n    modalClosed: modalToggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/Mihail/Documents/VS/projects/chat-app/client/src/containers/Chat/Chat.js"],"names":["React","useState","useEffect","Fragment","Info","Input","Messages","Users","Modal","classes","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","modalShow","setModalShow","ENDPOINT","parse","search","alert","document","assign","emit","error","off","on","sendMessage","event","preventDefault","setMessageHandler","target","value","modalToggleHandler","OuterWrapper","InnerWrapper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport Info from \"../../components/Info/Info\";\nimport Input from \"../../components/Input/Input\";\nimport Messages from \"../../components/Messages/Messages\";\nimport Users from \"../../components/Users/Users\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nimport classes from \"./Chat.module.css\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n\n  const ENDPOINT = \"https://socketsio-chat.herokuapp.com/\";\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    if (!(name || room)) {\n      alert(\"Error: empty query params!\");\n      document.location.assign(\"/\");\n    }\n    setName(name);\n    setRoom(room);\n\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", { name, room }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n\n    socket.on(\"roomData\", ({ users }) => setUsers(users));\n\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n  };\n\n  const setMessageHandler = event => setMessage(event.target.value);\n\n  const modalToggleHandler = () => setModalShow(modalShow ? false : true);\n\n  return (\n    <Fragment>\n      <div className={classes.OuterWrapper}>\n        <div className={classes.InnerWrapper}>\n          <Info room={room} users={modalToggleHandler} />\n          <Messages messages={messages} name={name} />\n          <Input message={message} send={sendMessage} set={setMessageHandler} />\n        </div>\n        <Users users={users} />\n      </div>\n      <Modal users={users} show={modalShow} modalClosed={modalToggleHandler} />\n    </Fragment>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}