{"ast":null,"code":"import React from\"react\";import ReactEmoji from\"react-emoji\";import classes from\"./Message.module.css\";var Message=function Message(props){var name=props.name.trim().toLowerCase();var current=props.message.user===name;var opacity=0;var currentTime=new Date().toLocaleTimeString('en-GB',{hour:\"numeric\",minute:\"numeric\"});var nameOpacityHandler=function nameOpacityHandler(){return opacity=!opacity?1:0;};//two different types of messages can be shown if its current user's message or not\nvar message=current?React.createElement(\"div\",{className:[classes.Container,classes.End].join(\" \")},React.createElement(\"p\",{className:[classes.SentBy,classes.pr].join(\" \"),style:{opacity:opacity}},name),React.createElement(\"div\",{className:[classes.Box,classes.Green].join(\" \"),onMouseOver:nameOpacityHandler},React.createElement(\"p\",{className:[classes.Text,classes.White].join(\" \")},ReactEmoji.emojify(props.message.text)),React.createElement(\"p\",{className:classes.Time},currentTime))):React.createElement(\"div\",{className:[classes.Container,classes.Start].join(\" \")},React.createElement(\"div\",{className:[classes.Box,classes.Light].join(\" \")},React.createElement(\"p\",{className:[classes.Text,classes.Dark].join(\" \")},ReactEmoji.emojify(props.message.text)),React.createElement(\"p\",{className:[classes.SentBy,classes.pl].join(\" \")},props.message.user,\" \",React.createElement(\"span\",null,currentTime))));return message;};export default Message;","map":{"version":3,"sources":["/Users/Mihail/Documents/VS/projects/chat-app/client/src/components/Message/Message.js"],"names":["React","ReactEmoji","classes","Message","props","name","trim","toLowerCase","current","message","user","opacity","currentTime","Date","toLocaleTimeString","hour","minute","nameOpacityHandler","Container","End","join","SentBy","pr","Box","Green","Text","White","emojify","text","Time","Start","Light","Dark","pl"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,CACvB,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAN,CAAWC,IAAX,GAAkBC,WAAlB,EAAb,CACA,GAAIC,CAAAA,OAAO,CAAGJ,KAAK,CAACK,OAAN,CAAcC,IAAd,GAAuBL,IAArC,CACA,GAAIM,CAAAA,OAAO,CAAG,CAAd,CACA,GAAIC,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,CAAuC,CAAEC,IAAI,CAAE,SAAR,CAAmBC,MAAM,CAAE,SAA3B,CAAvC,CAAlB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAON,CAAAA,OAAO,CAAG,CAACA,OAAD,CAAW,CAAX,CAAe,CAAhC,EAA3B,CAEA;AACA,GAAMF,CAAAA,OAAO,CAAGD,OAAO,CACrB,2BAAK,SAAS,CAAE,CAACN,OAAO,CAACgB,SAAT,CAAoBhB,OAAO,CAACiB,GAA5B,EAAiCC,IAAjC,CAAsC,GAAtC,CAAhB,EACE,yBACE,SAAS,CAAE,CAAClB,OAAO,CAACmB,MAAT,CAAiBnB,OAAO,CAACoB,EAAzB,EAA6BF,IAA7B,CAAkC,GAAlC,CADb,CAEE,KAAK,CAAE,CAAET,OAAO,CAAEA,OAAX,CAFT,EAIGN,IAJH,CADF,CAOE,2BACE,SAAS,CAAE,CAACH,OAAO,CAACqB,GAAT,CAAcrB,OAAO,CAACsB,KAAtB,EAA6BJ,IAA7B,CAAkC,GAAlC,CADb,CAEE,WAAW,CAAEH,kBAFf,EAIE,yBAAG,SAAS,CAAE,CAACf,OAAO,CAACuB,IAAT,CAAevB,OAAO,CAACwB,KAAvB,EAA8BN,IAA9B,CAAmC,GAAnC,CAAd,EACGnB,UAAU,CAAC0B,OAAX,CAAmBvB,KAAK,CAACK,OAAN,CAAcmB,IAAjC,CADH,CAJF,CAOE,yBAAG,SAAS,CAAE1B,OAAO,CAAC2B,IAAtB,EAA6BjB,WAA7B,CAPF,CAPF,CADqB,CAmBrB,2BAAK,SAAS,CAAE,CAACV,OAAO,CAACgB,SAAT,CAAoBhB,OAAO,CAAC4B,KAA5B,EAAmCV,IAAnC,CAAwC,GAAxC,CAAhB,EACE,2BAAK,SAAS,CAAE,CAAClB,OAAO,CAACqB,GAAT,CAAcrB,OAAO,CAAC6B,KAAtB,EAA6BX,IAA7B,CAAkC,GAAlC,CAAhB,EACE,yBAAG,SAAS,CAAE,CAAClB,OAAO,CAACuB,IAAT,CAAevB,OAAO,CAAC8B,IAAvB,EAA6BZ,IAA7B,CAAkC,GAAlC,CAAd,EACGnB,UAAU,CAAC0B,OAAX,CAAmBvB,KAAK,CAACK,OAAN,CAAcmB,IAAjC,CADH,CADF,CAIE,yBAAG,SAAS,CAAE,CAAC1B,OAAO,CAACmB,MAAT,CAAiBnB,OAAO,CAAC+B,EAAzB,EAA6Bb,IAA7B,CAAkC,GAAlC,CAAd,EACGhB,KAAK,CAACK,OAAN,CAAcC,IADjB,CACuB,GADvB,CAEE,gCAAOE,WAAP,CAFF,CAJF,CADF,CAnBF,CAgCA,MAAOH,CAAAA,OAAP,CACD,CA1CD,CA4CA,cAAeN,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport ReactEmoji from \"react-emoji\";\nimport classes from \"./Message.module.css\";\n\nconst Message = props => {\n  const name = props.name.trim().toLowerCase();\n  let current = props.message.user === name;\n  let opacity = 0;\n  let currentTime = new Date().toLocaleTimeString('en-GB', { hour: \"numeric\", minute: \"numeric\"});\n\n  const nameOpacityHandler = () => (opacity = !opacity ? 1 : 0);\n\n  //two different types of messages can be shown if its current user's message or not\n  const message = current ? (\n    <div className={[classes.Container, classes.End].join(\" \")}>\n      <p\n        className={[classes.SentBy, classes.pr].join(\" \")}\n        style={{ opacity: opacity }}\n      >\n        {name}\n      </p>\n      <div\n        className={[classes.Box, classes.Green].join(\" \")}\n        onMouseOver={nameOpacityHandler}\n      >\n        <p className={[classes.Text, classes.White].join(\" \")}>\n          {ReactEmoji.emojify(props.message.text)}\n        </p>\n        <p className={classes.Time}>{currentTime}</p>\n      </div>\n    </div>\n  ) : (\n    <div className={[classes.Container, classes.Start].join(\" \")}>\n      <div className={[classes.Box, classes.Light].join(\" \")}>\n        <p className={[classes.Text, classes.Dark].join(\" \")}>\n          {ReactEmoji.emojify(props.message.text)}\n        </p>\n        <p className={[classes.SentBy, classes.pl].join(\" \")}>\n          {props.message.user}{\" \"}\n          <span>{currentTime}</span>\n        </p>\n      </div>\n    </div>\n  );\n\n  return message;\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}